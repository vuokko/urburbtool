{"name":"Urburbtool","tagline":"Tool to send bulk messsages to USB","body":"Urb Urb Tool\r\n============\r\n\r\nSend and receive USB block messages\r\n\r\nThe itch\r\n--------\r\n\r\nWhile developing driver for oscilloscope, I wanted to send my commands\r\ninteractively and just test and beat the features out of the device.\r\n\r\nThe scratch\r\n-----------\r\n\r\nThis program uses FLTK to make its UI, libusb to communicate. All civilized\r\ndistributions should have them. For compilation XXD might be required to create\r\nimages.cxx file.\r\n\r\nCompile with (GNU)make and run with ./urburbtool No install targets provided.\r\n\r\nEtymology\r\n---------\r\n\r\nWireshark report these packet as URB_Bulk_in and out. URB URB tool was\r\nwritten to get some contol over URBbing devices.\r\n\r\nKnown bugs\r\n----------\r\n\r\n* The horizontal scrollbar sucks with FLTK 1.3.3. SVN version works.\r\n\r\nUsage\r\n-----\r\n1. Disconnect button. This button is active when connection is made. To make connection select two usable (2) (in and out) end points. When connection is made, device tree is deactivated and send data input (7) is activated.\r\n2. Usable end point. With green background there is usable end point. (Opened OK and bulk transfer mode)\r\n3. Selected end point.\r\n4. Unusable device. Opening device failed. Red background.\r\n5. Sent or received data in hex. Arrow left as icon and black background is sent data and arrow right and white background is received data. First column is something like byte count or address.\r\n6. Data in ASCII.\r\n7. Data to be sent. Enter sends. Initially deactivated. Read tool tip for more information.\r\n8. Bus, Address configuration and interface to be used.\r\n9. Host to device end point.\r\n10. Device to host end point.\r\n\r\nLicense\r\n-------\r\n\r\nGPL v3+","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}